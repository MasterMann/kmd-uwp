<UserControl
    x:Class="kmd.Core.Explorer.ExplorerControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bh="using:kmd.Core.Extensions.Behaviors"
    xmlns:contracts="using:kmd.Core.Explorer.Contracts"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls1="using:kmd.Core.Explorer.Controls"
    xmlns:converteresExt="using:kmd.Core.Extensions.Converters"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:explorer="using:kmd.Core.Explorer"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:storage1="using:Windows.Storage"
    d:DesignHeight="300"
    d:DesignWidth="400"
    GettingFocus="UserControl_GettingFocus"
    mc:Ignorable="d">
    <UserControl.Resources>
        <explorer:ExplorerViewModelLocator x:Key="ExplorerViewModelLocator" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converteresExt:BooleanToGridLengthConverter x:Key="BooleanToGridLengthConverter" />
        <converteresExt:BooleanToActiveExplorerConverter x:Key="BooleanToActiveExplorerConverter" />
        <converteresExt:InverseBooleanVisibilityConverter x:Key="InverseBooleanVisibilityConverter" />

        <ItemsPanelTemplate x:Key="ItemsWrapGridTemplate">
            <ItemsWrapGrid Orientation="Horizontal" />
        </ItemsPanelTemplate>

        <ItemsPanelTemplate x:Key="ItemsStackPanelTemplate">
            <ItemsStackPanel />
        </ItemsPanelTemplate>

        <DataTemplate x:Key="ExplorerListDataGridItemTemplate" x:DataType="contracts:IExplorerItem">
            <Grid
                Name="ItemTemplateGrid"
                Height="50"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="Transparent">
                <interactivity:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{Binding IsPhysical}" Value="true">
                        <core:ChangePropertyAction
                            PropertyName="ContextFlyout"
                            TargetObject="{Binding ElementName=ItemTemplateGrid}"
                            Value="{StaticResource ExplorerItemMenuFlyout}" />
                    </core:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition x:Name="DateCreatedColumn" Width="{Binding DataContext.ExplorerViewStateManager.ShowDateCreated, ElementName=RootElement, Converter={StaticResource BooleanToGridLengthConverter}}" />
                    <ColumnDefinition x:Name="AttributesColumn" Width="{Binding DataContext.ExplorerViewStateManager.ShowAttributes, ElementName=RootElement, Converter={StaticResource BooleanToGridLengthConverter}}" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <Image Height="30" Source="{x:Bind Icon}" />
                        <TextBlock Text="{x:Bind Name}" />
                    </StackPanel>
                    <TextBlock Text="{x:Bind DisplayType}" Visibility="{Binding DataContext.ExplorerViewStateManager.ShowDisplayType, ElementName=RootElement}" />
                </StackPanel>
                <StackPanel Grid.Column="1">
                    <TextBlock Text="{x:Bind DateCreated.LocalDateTime}" />
                </StackPanel>
                <StackPanel Grid.Column="2">
                    <TextBlock Text="{x:Bind Attributes}" />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ExplorerListTilesItemTemplate" x:DataType="contracts:IExplorerItem">
            <Grid
                Name="ItemControl"
                Background="Transparent"
                ToolTipService.Placement="Mouse">
                <ToolTipService.ToolTip>
                    <StackPanel Background="{ThemeResource SystemControlAcrylicElementBrush}" BorderThickness="0">
                        <TextBlock Text="{x:Bind DisplayType}" />
                        <TextBlock Text="{x:Bind Attributes}" />
                        <TextBlock Text="{x:Bind DateCreated.LocalDateTime}" />
                        <TextBlock Text="{x:Bind Path}" TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </ToolTipService.ToolTip>
                <StackPanel
                    Width="70"
                    Height="80"
                    Margin="10"
                    Orientation="Vertical">
                    <interactivity:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{Binding IsPhysical}" Value="true">
                            <core:ChangePropertyAction
                                PropertyName="ContextFlyout"
                                TargetObject="{Binding ElementName=ItemControl}"
                                Value="{StaticResource ExplorerItemMenuFlyout}" />
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <Image Height="40" Source="{x:Bind Icon}" />
                    <TextBlock
                        MaxLines="2"
                        Text="{x:Bind Name}"
                        TextTrimming="WordEllipsis"
                        TextWrapping="Wrap" />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <MenuFlyout x:Key="ExplorerItemMenuFlyout">
            <MenuFlyout.Items>
                <MenuFlyoutItem Click="Open_Click" Text="Open">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="OpenFile" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="OpenWith_Click" Text="Open With">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="OpenWith" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator />
                <MenuFlyoutItem Click="Cut_Click" Text="Cut">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Cut" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="Copy_Click" Text="Copy">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Copy" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="Paste_Click" Text="Paste here">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Paste" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="Delete_Click" Text="Delete">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Delete" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="Rename_Click" Text="Rename">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Rename" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem
                    Click="ChangeExtension_Click"
                    Text="Change extension"
                    Visibility="{Binding IsFile, Converter={StaticResource BoolToVisibilityConverter}}">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Rename" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator />
                <MenuFlyoutItem Click="GroupRename_Click" Text="Group rename">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Rename" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="GroupItems_Click" Text="Group items">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Manage" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="Details_Click" Text="Details">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="ViewAll" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="AddNewFolder_Click" Text="New folder">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="NewFolder" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyout.Items>
        </MenuFlyout>
        <MenuFlyout x:Key="ExplorerMenuFlyout">
            <MenuFlyout.Items>
                <MenuFlyoutItem Click="Paste_Click" Text="Paste">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Paste" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Click="AddNewFolder_Click" Text="New Folder">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="NewFolder" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyout.Items>
        </MenuFlyout>
    </UserControl.Resources>
    <Border
        x:Name="IsActiveBorder"
        Padding="0,10,0,0"
        BorderBrush="{x:Bind IsActive, Mode=OneWay, Converter={StaticResource BooleanToActiveExplorerConverter}}"
        BorderThickness="0,3,0,0">
        <Grid x:Name="RootElement" DataContext="{Binding ExplorerViewModel, Source={StaticResource ExplorerViewModelLocator}}">
            <Grid x:Name="ContentArea" Margin="{StaticResource MediumLeftRightMargin}">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="LoadingDots" Height="Auto" />
                    <RowDefinition x:Name="Actions" Height="Auto" />
                    <RowDefinition x:Name="BreadcrumbAndPath" Height="Auto" />
                    <RowDefinition x:Name="AppBar" Height="Auto" />
                    <RowDefinition x:Name="ExplorerItems" Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <ProgressBar IsIndeterminate="True" Opacity="{Binding IsBusy, Converter={StaticResource BooleanToOpacityConverter}}" />
                </Grid>
                <Grid Grid.Row="1" />
                <Grid Grid.Row="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ComboBox
                            Grid.Column="0"
                            DisplayMemberPath="Name"
                            ItemsSource="{Binding Locations}"
                            SelectedItem="{Binding SelectedLocationItem, Mode=TwoWay}" />
                        <controls1:PathBox
                            x:Name="PathBox"
                            Grid.Row="0"
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            EscFallbackValue="{Binding CurrentFolder.Path}"
                            FocusFallbackControl="{Binding ElementName=StorageItems}"
                            LostFocus="PathBox_LostFocus"
                            Opacity="{Binding ElementName=PathBox, Path=FocusState, Converter={StaticResource FocusStateToOpacityReverseConverter}}"
                            Text="{Binding CurrentFolder.Path}">
                            <interactivity:Interaction.Behaviors>
                                <bh:FocusBehavior IsFocused="{Binding IsPathBoxFocused, Mode=TwoWay}" />
                            </interactivity:Interaction.Behaviors>
                        </controls1:PathBox>
                        <controls1:BreadcrumbControl
                            x:Name="Breadcrumb"
                            Grid.Row="0"
                            Grid.Column="1"
                            ItemDragOver="Breadcrumb_ItemDragOver"
                            ItemDrop="Breadcrumb_ItemDrop"
                            ItemSelected="Breadcrumb_ItemSelected"
                            ItemsSource="{Binding CurrentFolderExpandedRoots}"
                            Opacity="{Binding ElementName=PathBox, Path=FocusState, Converter={StaticResource FocusStateToOpacityConverter}}"
                            Seperator="&gt;">
                            <controls1:BreadcrumbControl.ItemTemplate>
                                <DataTemplate x:DataType="storage1:IStorageFolder">
                                    <TextBlock Text="{Binding DisplayName}" />
                                </DataTemplate>
                            </controls1:BreadcrumbControl.ItemTemplate>
                        </controls1:BreadcrumbControl>
                    </Grid>
                </Grid>
                <Grid Grid.Row="4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <controls1:ExplorerGridView
                            x:Name="StorageItems"
                            AllowDrop="True"
                            CanDragItems="True"
                            DoubleTapped="StorageItems_DoubleTapped"
                            DragItemsCompleted="StorageItems_DragItemsCompleted"
                            DragItemsStarting="StorageItems_DragItemsStarting"
                            DragOver="StorageItems_DragOver"
                            Drop="StorageItems_Drop"
                            ItemTemplate="{StaticResource ExplorerListDataGridItemTemplate}"
                            ItemsPanel="{StaticResource ItemsStackPanelTemplate}"
                            ItemsSource="{Binding ExplorerItems}"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                            SelectionChanged="StorageItems_SelectionChanged"
                            SelectionMode="Extended">
                            <controls1:ExplorerGridView.ItemContainerStyle>
                                <Style TargetType="GridViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Bottom" />
                                    <Setter Property="FocusVisualPrimaryBrush" Value="Transparent" />
                                </Style>
                            </controls1:ExplorerGridView.ItemContainerStyle>
                            <controls1:ExplorerGridView.Style>
                                <Style TargetType="controls1:ExplorerGridView">
                                    <Setter Property="ContextFlyout" Value="{StaticResource ExplorerMenuFlyout}" />
                                </Style>
                            </controls1:ExplorerGridView.Style>
                        </controls1:ExplorerGridView>
                        <CommandBar Grid.Row="1">
                            <AppBarButton
                                x:Name="ColumSelectorButton"
                                Icon="AllApps"
                                Label="Columns"
                                Visibility="{x:Bind IsInTilesView, Mode=OneWay, Converter={StaticResource InverseBooleanVisibilityConverter}}">
                                <AppBarButton.Flyout>
                                    <Flyout>
                                        <StackPanel>
                                            <CheckBox
                                                x:Name="ShowDisplayType"
                                                Content="DisplayType"
                                                IsChecked="{Binding ExplorerViewStateManager.ShowDisplayType, Mode=TwoWay}" />
                                            <CheckBox
                                                x:Name="ShowDateCreated"
                                                Content="DateCreated"
                                                IsChecked="{Binding ExplorerViewStateManager.ShowDateCreated, Mode=TwoWay}" />
                                            <CheckBox
                                                x:Name="ShowAttributes"
                                                Content="Attributes"
                                                IsChecked="{Binding ExplorerViewStateManager.ShowAttributes, Mode=TwoWay}" />
                                        </StackPanel>
                                    </Flyout>
                                </AppBarButton.Flyout>
                            </AppBarButton>
                            <AppBarToggleButton x:Name="ChangeExplorerViewStateButton" IsChecked="{x:Bind IsInTilesView, Mode=TwoWay}">
                                <interactivity:Interaction.Behaviors>
                                    <core:DataTriggerBehavior Binding="{Binding IsChecked, ElementName=ChangeExplorerViewStateButton}" Value="False">
                                        <core:ChangePropertyAction
                                            PropertyName="Icon"
                                            TargetObject="{Binding ElementName=ChangeExplorerViewStateButton}"
                                            Value="ViewAll" />
                                        <core:ChangePropertyAction
                                            PropertyName="Label"
                                            TargetObject="{Binding ElementName=ChangeExplorerViewStateButton}"
                                            Value="GridView" />
                                    </core:DataTriggerBehavior>
                                    <core:DataTriggerBehavior Binding="{Binding IsChecked, ElementName=ChangeExplorerViewStateButton}" Value="True">
                                        <core:ChangePropertyAction
                                            PropertyName="Icon"
                                            TargetObject="{Binding ElementName=ChangeExplorerViewStateButton}"
                                            Value="List" />
                                        <core:ChangePropertyAction
                                            PropertyName="Label"
                                            TargetObject="{Binding ElementName=ChangeExplorerViewStateButton}"
                                            Value="ListView" />
                                    </core:DataTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </AppBarToggleButton>
                        </CommandBar>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</UserControl>
